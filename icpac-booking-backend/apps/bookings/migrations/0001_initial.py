# Generated by Django 5.0.7 on 2025-07-22 04:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rooms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Meeting/event title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Meeting description or agenda')),
                ('start_date', models.DateField(help_text='Start date of booking')),
                ('end_date', models.DateField(help_text='End date of booking')),
                ('start_time', models.TimeField(help_text='Start time')),
                ('end_time', models.TimeField(help_text='End time')),
                ('booking_type', models.CharField(choices=[('hourly', 'Hourly'), ('full_day', 'Full Day'), ('multi_day', 'Multi Day'), ('weekly', 'Weekly')], default='hourly', help_text='Type of booking', max_length=20)),
                ('attendee_count', models.PositiveIntegerField(default=1, help_text='Expected number of attendees', validators=[django.core.validators.MinValueValidator(1)])),
                ('organizer', models.CharField(help_text='Meeting organizer name', max_length=255)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', help_text='Booking approval status', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, help_text='When the booking was approved/rejected', null=True)),
                ('approval_notes', models.TextField(blank=True, help_text='Notes from the approver')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Admin who approved/rejected the booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_bookings', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(help_text='Room being booked', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='rooms.room')),
                ('user', models.ForeignKey(help_text='User making the booking', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'db_table': 'bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal notes visible only to admins')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='bookings.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'booking_notes',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lte', models.F('end_date'))), name='check_start_date_before_end_date'),
        ),
    ]
